#
# Cookbook Name:: ss
# Recipe:: _ss_getonlypassword
#
# Copyright (c) 2015 The Authors, All Rights Reserved.
#
# Cookbook Name:: starter
# Recipe:: _ss_getonlypassword
#
# Copyright (c) 2015 The Authors, All Rights Reserved.

# Example how use zanzibar library
#
#require 'zanzibar'
#
#chef_gem "zanzibar" do
#  action :install
#end
#
#require 'zanzibar'
#
#secrets = Zanzibar::Zanzibar.new(:domain => 'local', :wsdl => "http://st2.carboniteinc.com/SecretServer/webservices/sswebservice.asmx?wsdl")
#
#ss_got_password = secrets.get_password(7)


# Example how use Mixlib::ShellOut
#last_cmd = "ls -1 | sort -g | tail -n 1"
#last_version = Mixlib::ShellOut.new(last_cmd, :cwd => deploy['deploy_to']).run_command
#last_version = last_version.stdout.to_i
#default['agate_stack']['opsworks']['last_version'] = last_version.to_s

# Example how replace text in file
#rc = Chef::Util::FileEdit.new("/home/secadmin/ss_password")
#rc.search_file_replace_line(/123456/,"#{ss_got_password}")
#rc.write_file
#
#prompt="Secret Server Password: "
#print prompt
#secret_server_password = STDIN.gets.chomp

#puts "You enterd: " + #{secret_server_password}

ss_passwd = Mixlib::ShellOut.new("powershell ./ss_getonlypassword.ps1 '#{node['ss']['username']}' asdc123 7")
ss_passwd.run_command

# To show taken password use:
#puts ss_passwd.stdout

# For viewing errors
puts "Error message if exist" + ss_passwd.stderr

# Example of possible conversion for taken password
#can be used the next conversion
#ss_got_password = ss_passwd.stdout.to_i
#ss_passwd_s = ss_got_password.to_s

node.override['ss']['win_password'] = ss_passwd.stdout

# Save password in file c:\ss_passwdfile  - ONLY FOR TESTING PURPOSES
file './ss_passwdfile' do
  action :create
  content node['ss']['win_password']
end


# Powershell script to take password from secret server
# you need to put it in c:\ss_getonlypassword.ps1 file
#powershell_script "get_password" do
#    code <<-EOH
#    Write-Host “Hello, World!”
#    $url = 'http://sst2.carboniteinc.com/SecretServer/webservices/sswebservice.asmx'
#    $username = 'secadmin'
#    $password = 'asdc123'
#    $domain = ''   # leave blank for local users
#    $secretId = '7'
#    $proxy = New-WebServiceProxy -uri $url -UseDefaultCredential
#    $result1 = $proxy.Authenticate($username, $password, '', $domain)

#    if ($result1.Errors.length -gt 0){
#      $result1.Errors[0]
#      exit
#    }
#    else
#    {
#      $token = $result1.Token
#    }

#    $result2 = $proxy.GetSecret($token, $secretId, $false, $null)
#    if ($result2.Errors.length -gt 0){
#      $result2.Errors[0]
#    }
#    else
#    {
#        override["ss"]["win_password"] = $result2.Secret.Items[2].Value
#        return $result2.Secret.Items[2].Value
#    }
#   EOH
#
#  ss_got_password = get_password
#end
